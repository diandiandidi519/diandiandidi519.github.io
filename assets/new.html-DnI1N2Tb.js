import{_ as s,c as a,b as e,o as t}from"./app-D8niMc1Q.js";const p={};function c(o,n){return t(),a("div",null,n[0]||(n[0]=[e(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">create</span><span class="token punctuation">(</span><span class="token parameter">con<span class="token punctuation">,</span> <span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 创建一个对象，对象的原型指向构造函数的原型</span></span>
<span class="line">  <span class="token keyword">const</span> obj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>con<span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">//执行这个函数，并且this指向创建的对象</span></span>
<span class="line">  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">con</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">//返回结果，如果函数执行返回的是object对象，则返回这个对象，否则返回对象自身</span></span>
<span class="line">  <span class="token keyword">return</span> result <span class="token keyword">instanceof</span> <span class="token class-name">Object</span> <span class="token operator">?</span> result <span class="token operator">:</span> obj<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)]))}const i=s(p,[["render",c],["__file","new.html.vue"]]),u=JSON.parse('{"path":"/js/%E6%89%8B%E5%86%99/%E5%87%BD%E6%95%B0/new.html","title":"","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1740999754000,"contributors":[{"name":"wangshuya.wsy","username":"wangshuya.wsy","email":"wangshuya.wsy@bytedance.com","commits":1,"url":"https://github.com/wangshuya.wsy"}]},"filePathRelative":"js/手写/函数/new.md"}');export{i as comp,u as data};
