import{_ as s,c as a,b as p,o as t}from"./app-D8niMc1Q.js";const e={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="无重复字符的最长子串" tabindex="-1"><a class="header-anchor" href="#无重复字符的最长子串"><span>无重复字符的最长子串</span></a></h1><p><a href="https://leetcode.cn/problems/longest-substring-without-repeating-characters/description/?envType=study-plan-v2&amp;envId=top-100-liked" target="_blank" rel="noopener noreferrer">3. 无重复字符的最长子串 - 力扣（LeetCode）</a></p><p>给定一个字符串 s ，请你找出其中不含有重复字符的 最长 子串 的长度。</p><p></p><p>示例 1:</p><p>输入: s = &quot;abcabcbb&quot;</p><p>输出: 3</p><p>解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。</p><p>示例 2:</p><p>输入: s = &quot;bbbbb&quot;</p><p>输出: 1</p><p>解释: 因为无重复字符的最长子串是 &quot;b&quot;，所以其长度为 1。</p><p>示例 3:</p><p>输入: s = &quot;pwwkew&quot;</p><p>输出: 3</p><p>解释: 因为无重复字符的最长子串是 &quot;wke&quot;，所以其长度为 3。</p><p>请注意，你的答案必须是 子串 的长度，&quot;pwke&quot; 是一个子序列，不是子串。</p><p>提示：</p><ul><li>0 &lt;= s.length &lt;= 5 * 104</li><li>s 由英文字母、数字、符号和空格组成</li></ul><h1 id="哈希解法" tabindex="-1"><a class="header-anchor" href="#哈希解法"><span>哈希解法</span></a></h1><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> <span class="token function-variable function">lengthOfLongestSubstring</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 用来存储每个元素及其对应的索引</span></span>
<span class="line">    <span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">// 用来表示最大子串的长度</span></span>
<span class="line">    <span class="token keyword">let</span> max <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    <span class="token comment">// 用来表示滑动窗口的滑动位置</span></span>
<span class="line">    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> c <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment">// 说明当前元素已经重复了，滑动窗口的初始要从重复元素的下一位置开始 那需要看下当前的子串的最大长度</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            left <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> left<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token comment">// 设置元素的位置</span></span>
<span class="line">        map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> i<span class="token punctuation">)</span></span>
<span class="line">        max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>i <span class="token operator">-</span> left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> max<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">return</span> max</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21)]))}const i=s(e,[["render",o],["__file","无重复字符的最长子串.html.vue"]]),u=JSON.parse('{"path":"/algorithm/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2.html","title":"无重复字符的最长子串","lang":"en-US","frontmatter":{},"headers":[],"git":{"updatedTime":1740396280000,"contributors":[{"name":"wangshuya.wsy","username":"wangshuya.wsy","email":"wangshuya.wsy@bytedance.com","commits":3,"url":"https://github.com/wangshuya.wsy"}]},"filePathRelative":"algorithm/滑动窗口/无重复字符的最长子串.md"}');export{i as comp,u as data};
